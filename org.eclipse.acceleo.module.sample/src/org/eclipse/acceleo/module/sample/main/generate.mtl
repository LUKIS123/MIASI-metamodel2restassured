[module generate('http://www.example.org/restAssuredTestGenerator')]

[comment encoding = UTF-8 /]

[template public generateTestClass(testClass : ClassDef)] 
[comment @main /]
[file (testClass.className.concat('.testdsl'), false, 'UTF-8')]
CLASS [testClass.className/] {
    URL "[testClass.baseUrl/]"
    
    [for (test : Test | testClass.tests)]
    TEST [test.name/] {
        REQUEST {
            METHOD [test.request.method/] "[test.request.method.httpMethod.toString()/]"
            URL "[test.request.method.optionalPath/]"
            [if (not test.request.requestElements->isEmpty())]
            HEADERS {
                [for (header : Header | test.request.requestElements->first())]
                "[header.key/]": "[header.value/]"
                [/for]
            }
            [/if]
            [if (not test.request.requestElements->isEmpty())]
            QUERY_PARAMS {
                [for (param : QueryParam | test.request.requestElements->first())]
                "[param.key/]" = "[param.value/]"
                [/for]
            }
            [/if]
            [if (test.request.requestElements->first() <> null and test.request.requestElements->first() <> null)]
            BODY
"""
[test.request.requestElements->first().toString()/]
"""
            [/if]
        }

        ASSERT {
            STATUS [test.validate.validateElements/]
[comment]            [if (not test.assertion.bodyContains->isEmpty())]
            BODY_CONTAINS [for (b : BodyContains | test.assertion.bodyContains)]"[b.value/]" [/for]
            [/if]
            [if (not test.assertion.bodyExact->isEmpty())]
            BODY_EXACT [for (ex : BodyExact | test.assertion.bodyExact)]"[ex.path/]" = "[ex.expectedValue/]" [/for]
            [/if]
            [if (not test.assertion.headers->isEmpty())]
            HEADER [for (h : Header | test.assertion.headers)]"[h.key/]": "[h.value/]" [/for]
            [/if][/comment]
        }
    }
    [/for]
}
[/file]
[/template]
